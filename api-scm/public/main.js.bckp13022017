(function () {
'use strict';

angular.module('angularRegistro', [])
.controller('Controlador1', Controlador1)
.controller('Controlador2', Controlador2)
.factory('ListFactory', ListFactory)
.factory('sharedList', sharedList)
.provider('Provider', Provider)
.service('FormularioService', FormularioService);
//.factory('Fact', Fact);
// .factory('Fact', function(){  return { Field: 'hola' };});
//.service('conectarApi', conectarApi);

Controlador1.$inject = ['FormularioService', 'Provider', 'sharedList'];
function Controlador1(FormularioService, Provider, sharedList) {
  var formulario = this;
  //var promise = sharedList.addItem(formulario.formData);
  //formulario.formData.titulo = "";
  //var lista = Provider;
  // formulario.items = lista.recuperarRegistros();

  formulario.text = "";

  formulario.formData = {};
  formulario.titulo = "";
  formulario.descripcion = "";
  formulario.plataforma = "";
  formulario.responsable = "";

  formulario.responsables = ["giglesias","malvear","hmeza","gerardo.pizarro","csalinas","mmendezp","jcaguirre"];
  formulario.placeResponsable = "";
  formulario.plataformas = ["plataforma1","plataforma2"];
  formulario.placePlataforma = "";
  formulario.CurrentDate = new Date();

  //formulario.setNumber = ListFactory.setNumber(5);



  formulario.crearRegistro = function () {

    //FormularioService.crearRegistro(formulario);
    //formulario.setNumber = ListFactory.setNumber(10);
    //console.log('Controlador11: ' + ListFactory.getNumber());
    //lista.setLista('hola');
    formulario.formData.titulo = formulario.titulo;
    formulario.formData.descripcion = formulario.descripcion;
    formulario.formData.plataforma = formulario.plataforma;
    formulario.formData.responsable = formulario.responsable;
    sharedList.addItem(formulario.formData);
    formulario.titulo = "";

    // var promise = FormularioService.recuperarRegistros();
    // promise.then(function (response) {
    //   lista = response.data;
    //   console.log('Controlador1: ' + lista);
    // })
    // .catch(function (error) {
    //   console.log("Problemas al conectar con la API");
    // });
    // Fact.Field = 'cambio';
    //console.log('Controlador1; '+Fact);

    //busqueda.listado = FormularioService.recuperarRegistros().data;
  };

}

//################################################################CONTROLLER2
Controlador2.$inject = ['FormularioService', 'Provider', 'sharedList', '$scope'];
function Controlador2(FormularioService, Provider, sharedList, $scope) {
  var busqueda = this;


  //var promise = Fact;
//  var promise = FormularioService.recuperarRegistros();

  //var lista = Provider;
  //busqueda.listado = lista.data;

  // busqueda.$watch('busqueda.number', function () {
  //        busqueda.number = ListFactory.getNumber();
  //    }
  // );


//  busqueda.listado = lista;
  //var test = promise.then.response.data;
  //console.log('controlador2: ' + busqueda.listado);

  //lista.item = "change";
  //busqueda.number = ListFactory.getNumber();
  //console.log('Controlador22: ' + busqueda.number);

  $scope.$watch('busqueda.listado', function (newValue, oldValue, scope) {
      //Do anything with $scope.letters
      var promise = sharedList.getList();
      promise.then(function (response) {
        busqueda.listado = response.data;
      //   lista = response.data;
        console.log('Controlador2: ' + busqueda.listado);
      //   busqueda.listado = lista.data;
      })
      .catch(function (error) {
         console.log("Problemas al conectar con la API");
      });

  });


  //console.log('Controlador2: '+Fact);
}

//##########################################################################SERVICE
// ShoppingListService.$inject = ['$q', 'WeightLossFilterService'];
// function ShoppingListService($q, WeightLossFilterService) {
FormularioService.$inject = ['$http'];
function FormularioService($http) {
  var service = this;

  service.recuperarRegistros = function () {
      var response = $http({
        method: "GET",
        url: ("/api")
      });
      return response;
    };

  service.crearRegistro = function (registro) {
    $http.post('/api', registro)
    .success(function(data) {
            //console.log(data + 'holahola')
            //$scope.formData = {};
            $http.get('/api')
            .success(function(data) {
                    //busqueda.formData = data;
                    //en data esta el listado completo
                    //console.log(busqueda + 'hola')
            }).error(function(data) {
                    console.log('Error: ' + data);
            });
    }).error(function(data) {
            console.log('Error:' + data);
    });
  };

  service.removeItem = function (itemIdex) {
    items.splice(itemIdex, 1);
  };
}

function sharedList($http) {
  //var  = "";

  return {
    addItem: addItem,
    getList: getList
  };

  function addItem(item) {
    $http.post('/api', item)
    .success(function(data) {
            //console.log(data + 'holahola')
    }).error(function(data) {
            console.log('Error:' + data);
    });

//    list.push(item);
  }

  function getList() {
    var response = $http({
      method: "GET",
      url: ("/api")
    });
    return response;
  }
}

function ListFactory() {
  var number = 1;
  function getNumber() {
    return number;
  }
  function setNumber(newNumber) {
    number = newNumber;
  }
  return {
    getNumber: getNumber,
    setNumber: setNumber,
  }
  // var factory = function () {
  //   return new FormularioService();
  // };
//esta fabrica retorna una funcion..la cual en si retorna un custom service (objeto no singleton)
  //return factory;
}

//Provider.$inject = ['$http'];
function Provider() {
  var provider = this;
  var lista = {};

  //provider.defaults = {maxItems: 10};
//$get caracteriza el uso de los providers
  provider.$get = function () {
    // var promise = FormularioService.recuperarRegistros();
    // promise.then(function (response) {
    //   lista = response.data;
    // })
    // .catch(function (error) {
    //   console.log("Problemas al conectar con la API");
    // });
    //es como un factory
    // var shoppingList = new ShoppingListService(provider.defaults.maxItems);
//devuelve un objeto con la definicion de maxItems
    return lista;
  };

  provider.setLista = function(item) {
    // var promise = FormularioService.recuperarRegistros();
    // promise.then(function (response) {
    //   lista = response.data;
    // })
    // .catch(function (error) {
    //   console.log("Problemas al conectar con la API");
    // });
    // lista.item = item;
    return lista;
  };
}


// function Fact() {

    // return FormularioService.recuperarRegistros();
    // var promise = FormularioService.recuperarRegistros();
    // promise.then(function (response) {
    //   return response.data;
    // })
    // .catch(function (error) {
    //   console.log("Problemas al conectar con la API");
    // });

//esta fabrica retorna una funcion..la cual en si retorna un custom service (objeto no singleton)
// }

// conectarApi.$inject = ['$q', '$http'];
// function conectarApi($q, $http) {
//   var conectar = this;
//
//   conectar.recuperar = function () {
//     var deferred = $q.defer();
//
//     var result = {
//       message: ""
//     };
//
//     $http.get('/api')
//     .success(function(data) {
//             //en data esta el listado completo
//             console.log(data + ' hola recuperamos algo');
//             //return data;
//             deferred.resolve(data);
//     }).error(function(data) {
//             console.log('Error: ' + data);
//             result.message = "Stay away from cookies, Yaakov!";
//             deferred.reject(result);
//     });
//
//     console.log('deferred -----' + deferred.promise);
//     return deferred.promise;
//   };
// }


})();
